---
# tasks file for nextcloud

# https://github.com/nextcloud/docker/tree/master/.examples/docker-compose/with-nginx-proxy/postgres/fpm
# https://github.com/nextcloud/docker/blob/master/stack.yml


# https://github.com/nextcloud/docker/blob/master/.examples/docker-compose/with-nginx-proxy/mariadb-cron-redis/fpm/docker-compose.yml

# documentation: https://github.com/nextcloud/docker

- name: assert mariadb_version is a string (otherwise 10.10 = 10.1)
  assert:
    that: nextcloud_mariadb_version is string
    # that: (item | type_debug == "string" )
  tags: type_assert

- name: Creates directory
  file:
    path: '{{ item }}'
    state: directory
    owner: root
    group: root
    mode: '0755'
  with_items:
    - '{{ container_path }}'
    - '{{ nextcloud_path }}'
    - '{{ nextcloud_path }}/docker-build'

- name: docker-compose.yml
  template:
    src: docker-compose.yml.j2
    dest: '{{ nextcloud_path }}/docker-compose.yml'
    owner: root
    group: root
    mode: '0640'

- name: Nextcloud Dockerfile
  template:
    src: Dockerfile
    dest: '{{ nextcloud_path }}/docker-build/Dockerfile'
    owner: root
    group: root
    mode: '0640'
  notify: nextcloud_docker-compose-build

  # originally from https://github.com/nextcloud/docker/blob/master/.examples/docker-compose/with-nginx-proxy/mariadb-cron-redis/fpm/web/nginx.conf
- name: nextcloud nginx.conf
  template:
    src: templates/nginx.conf
    dest: '{{ nextcloud_path }}/nginx.conf'
    owner: root
    group: root
    mode: '0640'
  notify: nextcloud_docker-compose-restart

- name: proxy config tuning
  template:
    src: nginx-proxy-config.conf
    dest: '{{ nextcloud_webproxy_path }}/data/vhost.d/{{ nextcloud_domain }}'
    owner: root
    group: root
    mode: '0644'
  notify:
    - nextcloud_webproxy_nginx_restart

- name: php.conf
  template:
    src: templates/php.conf
    dest: '{{ nextcloud_path }}/php.conf'
    owner: root
    group: www-data
    mode: '0640'
  notify: nextcloud_docker-compose-restart

- name: php.ini
  template:
    src: templates/php.ini
    dest: '{{ nextcloud_path }}/php.ini'
    owner: root
    group: www-data
    mode: '0640'
  notify: nextcloud_docker-compose-restart

- name: Nextcloud DB Tuning mysql.conf
  template:
    src: mysql.conf
    dest: '{{ nextcloud_path }}/mysql.conf'
    owner: root
    group: root
    mode: '0644'
  notify: nextcloud_docker-compose-restart

- name: occ wrapper
  copy:
    content: |
      #!/bin/bash
      set -eu
      dir="$(dirname $(readlink -f $0))"
      cd $dir
      docker compose exec --user www-data nextcloud php occ $@
    dest: '{{ nextcloud_path }}/occ'
    owner: root
    group: root
    mode: '0750'

- name: db dump wrapper
  copy:
    content: |
      #!/bin/bash
      # usage: ./dbdump.sh [db-dumps/customdump.sql.gz]
      set -eux
      set -o pipefail
      dir="$(dirname $(readlink -f $0))"
      cd $dir
      dump_file=${1:-db-dumps/nextcloud.sql.gz}
      docker compose exec -T db sh -c "exec mariadb-dump -u root -p\"\$MYSQL_ROOT_PASSWORD\" nextcloud --default-character-set=utf8mb4 --skip-dump-date | \
        sed 's\$VALUES (\$VALUES\n(\$g' | sed 's\$),(\$),\n(\$g' " | \
        gzip --rsyncable > ${dump_file}
    dest: '{{ nextcloud_path }}/dbdump.sh'
    owner: root
    group: root
    mode: '0750'

- name: Nextcloud backup prebackup
  lineinfile:
    path: /usr/local/bin/prebackup.sh
    line: '{{ nextcloud_path }}/dbdump.sh'
    regex: '^{{ nextcloud_path }}'

- name: dbrestore wrapper
  copy:
    content: |
      #!/bin/bash
      # usage: ./dbrestore.sh [db-dumps/customdump.sql.gz]
      set -eux
      set -o pipefail
      dir="$(dirname $(readlink -f $0))"
      cd $dir
      dump_file=${1:-db-dumps/nextcloud.sql.gz}
      zcat ${dump_file} | \
      docker compose exec -T db sh -c 'exec mariadb -p"$MYSQL_ROOT_PASSWORD" nextcloud'
    dest: '{{ nextcloud_path }}/dbrestore.sh'
    owner: root
    group: root
    mode: '0750'

- name: delete old dump script
  file:
    path: '{{ nextcloud_path }}/mysqldump.sh'
    state: absent


- name: Flush handler before up
  meta: flush_handlers

- name: nextcloud docker-compose-up
  community.docker.docker_compose_v2:
    project_src: '{{ nextcloud_path }}'
    state: present
    build: "{{ nextcloud_docker_pull | ternary('always', 'policy') }}"
    pull: "{{ nextcloud_docker_pull | ternary('always', 'policy') }}"
  register: nextcloud__register_compose

- name: print actions by compose # noqa no-handler
  vars:
    actions: "{{ nextcloud__register_compose.actions }}"
  debug:
    var: actions
  changed_when: true
  when: nextcloud__register_compose.changed

# ./occ config:system:set overwritehost --value="mydomain.com"
# ./occ config:system:set overwriteprotocol --value="https"
# ./occ config:system:set overwrite.cli.url --value="https://mydomain.com/"

# https://github.com/nextcloud/nextcloud-snap/wiki/Putting-the-snap-behind-a-reverse-proxy
