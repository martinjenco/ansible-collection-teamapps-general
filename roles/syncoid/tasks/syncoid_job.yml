# Inner Task file for syncoid

- name: create user
  ansible.builtin.user:
    name: '{{ syncoid_source_host_ssh_user }}'
    password_lock: true
  delegate_to: '{{ syncoid_source_host_ssh }}'
  when: syncoid_source_host_ssh_user != "root"

- name: copy public key # noqa:no-handler
  authorized_key:
    user: '{{ syncoid_source_host_ssh_user }}'
    key: '{{ syncoid_reg__id_ed25519.public_key }}'
    comment: 'syncoid@{{ ansible_fqdn }} {{ base_authorized_keys_marker }}'
  delegate_to: '{{ syncoid_source_host_ssh }}'
  when:
    - not ansible_check_mode or not syncoid_reg__id_ed25519.changed # on
  tags:
    - ssh_authorized_keys

- name: 'create syncoid job script syncoid-{{ syncoid_job_id }}'
  vars:
    syncoid_job_id: "{{ syncoid_source_host }}-{{ syncoid_source_dataset | replace('/', '_') }}"
    syncoid_job__exclude_datasets: |-
      {% if syncoid_exclude_datasets %}
      {% for item in syncoid_exclude_datasets %}
      --exclude-datasets='{{ item }}' \
      {% endfor %}
      {% endif %}

    syncoid_job__exclude_snaps: |-
      {% if syncoid_exclude_snaps %}
      {%- for item in syncoid_exclude_snaps %}
      --exclude-snaps='{{ item }}' \
      {% endfor %}
      {% endif %}

    syncoid_job__include_snaps: |-
      {% if syncoid_include_snaps %}
      {% for item in syncoid_include_snaps %}
      --include-snaps='{{ item }}' \
      {% endfor %}
      {% endif %}
  copy:
    dest: /usr/local/sbin/syncoid-{{ syncoid_job_id }}
    owner: root
    group: root
    mode: '0750'
    content: |
      #!/bin/sh
      {{ syncoid_command }} \
        --source-bwlimit={{ syncoid_source_bwlimit }} \
        {% if syncoid_recursive %}--recursive{% endif %} \
        {% if syncoid_skip_parent %}--skip-parent{% endif %} \
        {% if syncoid_dumpsnaps %}--dumpsnaps{% endif %} \
        {% if not syncoid_sync_snapshot %}--no-sync-snap{% endif %} \
        {% if not syncoid_source_privilege_elevation %}--no-privilege-elevation{% endif %} \
        {{ syncoid_job__exclude_datasets | indent(2) }} \
        {{ syncoid_job__exclude_snaps | indent(2) }} \
        {{ syncoid_job__include_snaps | indent(2) }} \
        {% if syncoid_use_hold %}--use-hold{% endif %} \
        --sendoptions="{{ syncoid_sendoptions }}" \
        {% if syncoid_recvoptions != '' %}--recvoptions="{{ syncoid_recvoptions }}"{% endif %} \
        {% if not syncoid_rollback %}--no-rollback{% endif %} \
        --sshkey=/root/.ssh/syncoid_id_ed25519 \
        --sshoption StrictHostKeyChecking=accept-new \
        {% if syncoid_custom_options != '' %}{{ syncoid_custom_options }}{% endif %} \
        {{ syncoid_source_host_ssh_user }}@{{ syncoid_source_host_ssh }}:{{ syncoid_source_dataset }} \
        {{ syncoid_dest_dataset }}

- name: "create cronjob for syncoid-{{ syncoid_job_id }}"
  when:
    - syncoid_cronjob
  vars:
    syncoid_job_id: "{{ syncoid_source_host }}-{{ syncoid_source_dataset | replace('/', '_') }}"
  cron:
    cron_file: syncoid_{{ syncoid_source_host }}
    name: syncoid pull {{ syncoid_source_dataset }} from {{ syncoid_source_host }}
    minute: "{{ syncoid_cron_minute }}"
    hour: "{{ syncoid_cron_hour }}"
    user: root
    job: >
      /usr/local/sbin/syncoid-{{ syncoid_job_id }}
      >> /var/log/syncoid/cron-{{ syncoid_job_id }}.log 2>&1

- name: "remove cronjob for syncoid-{{ syncoid_job_id }}"
  cron:
    cron_file: syncoid_{{ syncoid_source_host }}
    name: syncoid pull {{ syncoid_source_dataset }} from {{ syncoid_source_host }}
    state: absent
  when:
    - not syncoid_cronjob
