# gitlab tasks

- name: Install prereqs
  apt:
    pkg:
      - curl
      - openssh-server
      - ca-certificates
      # - postfix # replaced by msmtp-mta
      - apt-transport-https
      - debian-archive-keyring
    state: present
    install_recommends: false

- name: remove archive key from deprecated keystore
  apt_key:
    url: "https://packages.gitlab.com/gitlab/gitlab-ce/gpgkey"
    id: F6403F6544A38863DAA0B6E03F01618A51312F3F
    state: absent
    keyring: /etc/apt/trusted.gpg

- name: Deploy Gitlab GPG Key
  # wget -O - https://packages.gitlab.com/gitlab/gitlab-ce/gpgkey | gpg --dearmor > roles/gitlab/files/gitlab_gitlab-ce-archive-keyring.gpg
  copy:
    src: gitlab_gitlab-ce-archive-keyring.gpg
    dest: /usr/share/keyrings/gitlab_gitlab-ce-archive-keyring.gpg
    owner: root
    group: root
    mode: '0644'
    force: false

- name: gitlab repository
  apt_repository:
    repo: deb [arch=amd64 signed-by=/usr/share/keyrings/gitlab_gitlab-ce-archive-keyring.gpg] https://packages.gitlab.com/gitlab/gitlab-ce/ubuntu/ {{ ansible_lsb.codename }} main
    state: present
    filename: 'gitlab_gitlab-ce'

- name: gitlab runner repository deb-src
  apt_repository:
    repo: deb-src [signed-by=/usr/share/keyrings/gitlab_gitlab-ce-archive-keyring.gpg] https://packages.gitlab.com/gitlab/gitlab-ce/ubuntu/ {{ ansible_lsb.codename }} main
    state: present
    filename: 'gitlab_gitlab-ce'

- name: Add sources list
  apt_repository:
    repo: deb https://packages.gitlab.com/gitlab/gitlab-ce/{{ ansible_lsb.id | lower }}/ {{ ansible_lsb.codename }} main
    state: absent
    filename: 'gitlab_gitlab-ce'

- name: Install latest package version
  apt:
    name: gitlab-ce
  when: gitlab_version == "latest"

- name: Install specific package version
  apt:
    name: gitlab-ce={{ gitlab_version }}
  when: gitlab_version != "latest"

- name: install gitlab.rb config file
  template:
    src: gitlab.rb.j2
    dest: /etc/gitlab/gitlab.rb
    owner: root
    group: root
    mode: '0600'
  notify: gitlab-ctl reconfigure

- name: Gitlab backup config
  lineinfile:
    path: /usr/local/bin/prebackup.sh
    line: 'gitlab-backup create BACKUP=auto GZIP_RSYNCABLE=yes CRON=1 SKIP={{ gitlab_backup_skip }}'
    regex: '^gitlab'

- name: cronjob for gitlab registry garbage collect # noqa args
  cron:
    name: gitlab-registry-garbage-collect
    minute: "25"
    hour: "04"
    day: "1" # monthly
    user: root
    job: '/usr/bin/gitlab-ctl registry-garbage-collect {{ gitlab_registry_garbage_collect_options }}'
    cron_file: registry_garbage_collect
    state: '{{ gitlab_registry_garbage_collect_state }}'

- name: gitlab custom robots.txt directory
  file:
    path: /srv/gitlab-nginx
    state: directory
    owner: root
    group: root
    mode: '0755'
  when: gitlab_custom_robots_txt

- name: deploy custom robots.txt
  template:
    src: robots.txt.j2
    dest: /srv/gitlab-nginx/robots.txt
    owner: root
    group: root
    mode: '0644'
  when: gitlab_custom_robots_txt
