---
# tasks file for webproxy

## Based on following Project, but tuned with custom nginx.conf
# - name: checkout gitrepo
#   git:
#     repo: 'https://github.com/evertramos/docker-compose-letsencrypt-nginx-proxy-companion.git'
#     dest: '{{ webproxy_path }}'
#     version: master

- name: webproxy directories
  file:
    path: '{{ item }}'
    state: directory
    owner: root
    group: root
    mode: '0755'
  with_items:
    - '{{ container_path }}'
    - '{{ webproxy_path }}'
    - '{{ webproxy_path }}/data'
    - '{{ webproxy_path }}/data/certs'
    - '{{ webproxy_path }}/data/conf.d'
    - '{{ webproxy_path }}/data/html'
    - '{{ webproxy_path }}/data/htpasswd'
    - '{{ webproxy_path }}/data/vhost.d'
    - '{{ webproxy_path }}/data/acme.sh'

- name: Create external docker network for communication between applications and webproxy
  docker_network:
    name: webproxy
    ipam_config:
      - subnet: 172.28.0.0/16
        gateway: 172.28.0.1

- name: List existing docker networks
  # workaround Go Template Syntax in jinja: --format "{{.Name}}"
  command: /usr/bin/docker network ls --no-trunc --format {{ "{{.Name}}" }}
  register: webproxy_register_docker_networks
  check_mode: false
  changed_when: false

- name: Warning if network does not exist # noqa ignore-errors
  fail:
    msg: "addtional network '{{ additional_network }}' is currently not available, startup will fail."
  when: not additional_network in webproxy_register_docker_networks.stdout_lines
  loop: "{{ webproxy_additional_networks }}"
  loop_control:
    loop_var: additional_network
  ignore_errors: '{{ webproxy_ignore_missing_network }}'

- name: 'Webproxy docker-compose.yml'
  template:
    src: docker-compose.yml.j2
    dest: '{{ webproxy_path }}/docker-compose.yml'
    owner: root
    group: root
    mode: '0640'

- name: 'Custom nginx.conf with performance tuning'
  template:
    src: nginx.conf
    dest: '{{ webproxy_path }}/data/nginx.conf'
    owner: root
    group: root
    mode: '0640'
  notify: webproxy_nginx_reload

- name: 'Nginx custom_options.conf'
  template:
    src: custom_options.conf
    dest: '{{ webproxy_path }}/data/conf.d/custom_options.conf'
    owner: root
    group: root
    mode: '0640'
  notify: webproxy_nginx_reload

  # from evertramos, with tuned listen backlog=65536
- name: 'Copy template for generated server config, nginx.tmpl'
  copy:
    src: '{{ webproxy_nginx_tmpl_file }}'
    dest: '{{ webproxy_path }}/nginx.tmpl'
    owner: root
    group: root
    mode: '0640'
  notify: webproxy_generator_restart

- name: Deploy vhost.d/default_location (config included in every location block)
  template:
    src: default_location.j2
    dest: '{{ webproxy_path }}/data/vhost.d/default_location'
    owner: root
    group: root
    mode: '0640'
  notify: webproxy_nginx_reload
  when: webproxy_access_log_off or webproxy_default_location_custom

- name: Deploy vhost.d/default (config included in every server block)
  template:
    src: default_vhost.j2
    dest: '{{ webproxy_path }}/data/vhost.d/default'
    owner: root
    group: root
    mode: '0640'

- name: 'Copy security.txt if defined'
  copy:
    content: "{{ webproxy_security_txt }}\n"
    dest: '{{ webproxy_path }}/data/html/security.txt'
    owner: root
    group: root
    mode: '0644'
  when: webproxy_security_txt

- name: webproxy_docker-compose-up
  community.docker.docker_compose_v2:
    project_src: '{{ webproxy_path }}'
    state: present
    remove_orphans: true
    pull: "{{ webproxy_docker_pull | ternary('always', 'policy') }}"
  register: webproxy__register_compose
  tags: compose_up

- name: print actions by compose # noqa no-handler
  vars:
    actions: "{{ webproxy__register_compose.actions }}"
  debug:
    var: actions
  changed_when: true
  when: webproxy__register_compose is defined and webproxy__register_compose.changed
