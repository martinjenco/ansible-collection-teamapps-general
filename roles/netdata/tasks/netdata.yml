---
# tasks file for netdata installs netdata on host and proxies requests to webproxy

- name: remove netdata gpg key from deprecated keystore
  apt_key:
    url: https://packagecloud.io/netdata/netdata/gpgkey
    id: A799AB702EA6DEE3E21AA716B4188B90F6FB8FD3 # for offline checkmode # gpg --list-keys --keyid-format=long --keyring /etc/apt/trusted.gpg
    state: absent
    keyring: /etc/apt/trusted.gpg

- name: Deploy Netdata GPG Key
  # wget -O - https://packagecloud.io/netdata/netdata/gpgkey | gpg --dearmor > roles/netdata/files/netdata.gpg
  copy:
    src: netdata.gpg
    dest: /usr/share/keyrings/netdata.gpg
    owner: root
    group: root
    mode: '0644'
    force: false

- name: remove ancient repository
  file:
    path: /etc/apt/sources.list.d/repositories_timber_io_public_vector_deb_ubuntu.list
    state: absent

- name: remove old repository
  file:
    path: /etc/apt/sources.list.d/packagecloud_io_netdata_netdata_ubuntu.list
    state: absent

- name: remove old repository distUpgrade
  file:
    path: /etc/apt/sources.list.d/packagecloud_io_netdata_netdata_ubuntu.list.distUpgrade
    state: absent

- name: configure netdata apt repo
  apt_repository:
    repo: 'deb [arch=amd64 signed-by=/usr/share/keyrings/netdata.gpg]  https://packagecloud.io/netdata/netdata/ubuntu/ {{ ansible_distribution_release }} main'
    update_cache: false
    filename: 'netdata'

- name: install netdata
  apt:
    name: netdata
    state: present

- name: create log directory
  file:
    path: /var/log/netdata
    state: directory
    owner: netdata
    group: netdata
    mode: '2750'

- name: add user netdata to docker group
  user:
    name: netdata
    shell: /usr/sbin/nologin
    groups: [docker]
    append: true
  notify: netdata_restart
  when: netdata_docker_integration

- name: deploy config
  template:
    src: '{{ item }}'
    dest: '/etc/netdata/{{ item }}'
    owner: root
    group: 'netdata'
    mode: '0640'
  with_items:
    - netdata.conf
    - stream.conf
  notify: netdata_restart

- name: ensure /etc/netdata/go.d exists
  file:
    path: "/etc/netdata/go.d"
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: configure docker metrics collection
  template:
    src: go.d/docker.conf
    dest: /etc/netdata/go.d/docker.conf
    owner: root
    group: root
    mode: '0644'
  notify: netdata_restart

- name: deploy postgres monitoring configuration
  template:
    src: postgres.conf.j2
    dest: /etc/netdata/go.d/postgres.conf
    owner: root
    group: netdata
    mode: '0640'
  notify: netdata_restart
  when: netdata_postgres_enabled

- name: check for cloud
  stat:
    path: /var/lib/netdata/cloud.d/
  register: netdata_cloud_stat

- name: notify old cloud
  debug:
    msg: Is netdata package up to date?
  when: not netdata_cloud_stat.stat.isdir is defined or not netdata_cloud_stat.stat.isdir

- name: disable cloud
  template:
    src: cloud.conf
    dest: /var/lib/netdata/cloud.d/cloud.conf
    owner: netdata
    group: netdata
    mode: '0640'
  when: netdata_cloud_stat.stat.isdir is defined and netdata_cloud_stat.stat.isdir
  notify: netdata_restart

- name: disable/enable telemetry  # noqa args
  file:
    path: /etc/netdata/.opt-out-from-anonymous-statistics
    state: "{{ netdata_disable_telemetry | ternary('touch', 'absent') }}"
    access_time: preserve
    modification_time: preserve
    owner: root
    group: root
    mode: '0644'
  notify: netdata_restart

- name: alarm sending configuration
  template:
    src: health_alarm_notify.conf
    dest: /etc/netdata/health_alarm_notify.conf
    owner: root
    group: root
    mode: '0640'
  notify: netdata_restart

- name: start netdata service
  systemd:
    service: netdata
    state: started
    enabled: true

- name: restart netdata service now if needed
  meta: flush_handlers

- name: Import tasks for netdata-docker integration
  import_tasks: docker.yml
  when: netdata_docker_integration

- name: Import tasks for netdata alarms
  import_tasks: alarms.yml
  tags: netdata_alarms
