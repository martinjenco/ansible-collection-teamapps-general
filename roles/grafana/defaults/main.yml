---
# defaults file for grafana deployment
grafana_path: '/container/grafana'
grafana_docker_pull: '{{ global_docker_pull | default(False) }}'

grafana_domain: 'grafana.{{ ansible_fqdn }}'

grafana_version: latest
grafana_mariadb_version: latest

grafana_mysql_rootpass:
grafana_mysql_password:
grafana_admin_password:

grafana_instance_name: "{{ grafana_domain }}"
grafana_smtp_enabled: "false"
grafana_smtp_host: localhost:25
grafana_smtp_user:
grafana_smtp_password:
grafana_smtp_from_address:
grafana_smtp_from_name: Grafana

# https://grafana.com/docs/grafana/latest/auth/gitlab/
grafana_auth_gitlab_enabled: 'false'
grafana_auth_gitlab_allow_sign_up: 'true'
grafana_auth_gitlab_client_id: 'GITLAB_APPLICATION_ID'
grafana_auth_gitlab_client_secret: 'GITLAB_SECRET'
grafana_auth_gitlab_scopes: 'read_user'
grafana_auth_gitlab_auth_url: 'https://gitlab.com/oauth/authorize'
grafana_auth_gitlab_token_url: 'https://gitlab.com/oauth/token'
grafana_auth_gitlab_api_url: 'https://gitlab.com/api/v4'
# GF_AUTH_GITLAB_ALLOWED_GROUPS: 'example, foo/bar'

# Install Grafana Plugins
grafana_plugins: []
  # - camptocamp-prometheus-alertmanager-datasource

# Provisioned datasources can be deleted with this list
grafana_datasources_delete: []
# grafana_datasources_delete:
#   - name: prometheus.example.com
#     orgId: 1

# Mark provisioned data sources for deletion if they are no longer in a provisioning file.
# It takes no effect if data sources are already listed in the deleteDatasources section.
grafana_datasources_prune: true

# Alternative way to delete datasources: set editable: true for the provisioned datasources,
# then they can also be deleted through the WebUI, after they are removed from the list.

# Provision Datasources
# https://grafana.com/docs/grafana/latest/administration/provisioning/#data-sources
# See README.md for examples
grafana_datasources: []


grafana_default_dashboards:
  - default/dockerlogs-vector.json
  - default/victoriametrics.json
  - default/victoriametrics-vmagent.json
  - default/victoriametrics-vmalert.json
  - default/netdata.json
  - default/alertmanager.json
  - default/blackbox.json
  - default/nvme.json

grafana_custom_dashboards: []

grafana_dashboards: '{{ grafana_default_dashboards + grafana_custom_dashboards }}'

grafana_remove_dashboards:
  - default/vmagent.json

# use bitnami build: https://hub.docker.com/r/bitnamilegacy/grafana-image-renderer
# non-root and automated build of grafana/grafana-image-renderer
# Settings: https://grafana.com/docs/grafana/latest/setup-grafana/image-rendering/
grafana_image_renderer_image: bitnamilegacy/grafana-image-renderer
grafana_image_renderer_version: latest
grafana_image_renderer_clustering_mode: browser
grafana_image_renderer_max_concurrency: 3
grafana_image_renderer_cpu_limit: 1.5
grafana_image_renderer_mem_limit: 500M
grafana_image_renderer_port: 127.0.0.8:18081 # port for metric scraping

# configure grafana with ini file
# allows to source another template file
# by default, it renders the grafana_config_ini variable
grafana_config_template: grafana.ini.j2

# grafana.ini content
grafana_config_ini: |
  # full default sample.ini config file at
  # https://github.com/grafana/grafana/blob/main/conf/sample.ini

  [security]
  allow_embedding = false
