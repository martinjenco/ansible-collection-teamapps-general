# nginx webserver

# config based on https://github.com/mikechernev/dockerised-php/tree/feature/log-to-stdout
- name: create directories ({{ webserver_domain }})
  file:
    path: '{{ item }}'
    state: directory
    owner: root
    group: root
    mode: '0755'
  with_items:
    - '{{ webserver_path }}'

- name: deploy docker-compose.yml ({{ webserver_domain }})
  template:
    src: docker-compose.yml.j2
    dest: '{{ webserver_path }}/docker-compose.yml'
    owner: root
    group: root
    mode: '0640'

- name: create user owned files ({{ webserver_domain }})
  file:
    path: '{{ item }}'
    state: directory
    owner: www-data
    group: www-data
    mode: '0755'
  with_items:
    - '{{ webserver_path }}/code'
    - '{{ webserver_path }}/code/{{ webserver_document_root }}' # document root

- name: deploy nginx config ({{ webserver_domain }})
  template:
    src: '{{ webserver_nginx_template }}'
    dest: '{{ webserver_path }}/site.conf'
    owner: www-data
    group: www-data
    mode: '0640'
  notify: webserver_restart_nginx

- name: deploy robots.txt
  copy:
    content: "{{ webserver_robots_txt }}\n"
    dest: '{{ webserver_path }}/code/{{ webserver_document_root }}/robots.txt'
    owner: root
    group: root
    mode: '0644'
  when:
    - webserver_manage_robots_txt
    - webserver_robots_txt is defined
    - webserver_robots_txt != ""

- name: remove robots.txt
  file:
    path: '{{ webserver_path }}/code/{{ webserver_document_root }}/robots.txt'
    state: absent
  when:
    - webserver_manage_robots_txt
    - (webserver_robots_txt is not defined) or webserver_robots_txt == ""

# - name: deploy info.php
#   template:
#     src: info.php
#     dest: '{{ webserver_path }}/code/httpdocs/info.php'
#     owner: root
#     group: root
#     mode: '0640'

- name: Include MySQL Tasks ({{ webserver_domain }})
  import_tasks: mysql.yml
  when: webserver_mysql_enable

- name: Include PHP Config ({{ webserver_domain }})
  import_tasks: php.yml
  when: webserver_php_enable

- name: Include FTP Access Tasks ({{ webserver_domain }})
  import_tasks: sftp.yml
  when: webserver_sftp_enable

- name: configure basic auth htpasswd in webproxy
  loop: "{{ webserver_addon_domains + [webserver_domain] }}" # basic auth needs to be deployed for all domains separately
  loop_control:
    loop_var: item_domain
  copy:
    content: "{{ webserver_basic_auth }}\n"
    dest: '{{ webserver_webproxy_path }}/data/htpasswd/{{ item_domain }}'
    owner: root
    group: root
    mode: '0644'
  when:
    - webserver_basic_auth != ''
  notify: webserver_restart_nginx

- name: Remove basic auth
  loop: "{{ webserver_addon_domains + [webserver_domain] }}" # basic auth needs to be deployed for all domains separately
  loop_control:
    loop_var: item_domain
  file:
    path: '{{ webserver_webproxy_path }}/data/htpasswd/{{ item_domain }}'
    state: absent
  when:
    - webserver_basic_auth == ''
  notify: webserver_restart_nginx

- name: configure basic auth for myadmin if configured ({{ webserver_domain }})
  copy:
    content: "{{ webserver_myadmin_htpasswd }}\n"
    dest: '{{ webserver_path }}/htpasswd_myadmin'
    owner: root
    group: root
    mode: '0644'
  when:
    - webserver_myadmin_enable

# - name: docker-compose-up ({{ webserver_domain }} in {{ webserver_path }})
#   docker_compose:
#     project_src: '{{ webserver_path }}'
#     state: present
#     remove_orphans: true
#     pull: "{{ webserver_docker_pull }}"
#     build: '{{ webserver_docker_pull }}'

- name: docker compose up ({{ webserver_domain }} in {{ webserver_path }})
  community.docker.docker_compose_v2:
    project_src: '{{ webserver_path }}'
    state: present
    remove_orphans: true
    pull: "{{ webserver_docker_pull | ternary('always', 'policy') }}"
    build: "{{ webserver_docker_pull | ternary('always', 'policy') }}"
  register: webserver__register_compose
  tags: compose_up

- name: print actions by compose # noqa no-handler
  vars:
    actions: "{{ webserver__register_compose.actions }}"
  debug:
    var: actions
  changed_when: true
  when: webserver__register_compose is defined and webserver__register_compose.changed
