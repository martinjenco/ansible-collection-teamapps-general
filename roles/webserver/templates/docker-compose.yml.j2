---
# docker-compose.yml
# config based on https://github.com/mikechernev/dockerised-php/tree/feature/log-to-stdout

services:
  web:
    image: '{{ webserver_nginx_image }}'
    user: "33"
    restart: always
    expose:
      - 8080
    environment:
      VIRTUAL_HOST: '{{ webserver_domains | join(",") }}'
      LETSENCRYPT_HOST: '{{ webserver_domains | join(",") }}'
      LETSENCRYPT_EMAIL: '{{ letsencrypt_email }}'
    volumes:
      - type: bind
        source: './code'
        target: /code
        read_only: false
      - type: bind
        source: ./site.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
{% if webserver_myadmin_enable %}
      - type: bind
        source: ./htpasswd_myadmin
        target: /etc/nginx/conf.d/htaccess/htpasswd_myadmin
        read_only: true
{% endif %}
    networks:
      - webproxy
      - code-network
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '10'
{% if webserver_healthcheck_command != "" %}
    healthcheck:
      test: ["CMD-SHELL", "{{ webserver_healthcheck_command }}|| exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
{% endif %}

{% if webserver_php_enable %}
  php:
{% if webserver_php_image != "" %}
    image: {{ webserver_php_image }}
    user: "33" # www-data
{% else %}
    build: ./php
{% endif %}
    restart: always
    volumes:
      - type: bind
        source: './code'
        target: /code
        read_only: false
      - type: bind
        source: ./php/fpm-custom.ini
        target: /usr/local/etc/php-fpm.d/zz-custom.conf
        read_only: true
      - type: bind
        source: ./php/php-override.ini
        target: /usr/local/etc/php/conf.d/override.ini
        read_only: true
    working_dir: /code
    networks:
      - code-network
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '10'
    healthcheck:
      test: ["CMD-SHELL", "{{ webserver_php_healthcheck_command }}"]
      interval: 30s
      timeout: 10s
      retries: 3

{% endif %}
{% if webserver_mysql_enable %}
  db:
    image: mariadb:{{ webserver_mariadb_version }}
    restart: always
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-allowed-packet=64M
    volumes:
      - type: bind
        source: './db'
        target: '/var/lib/mysql'
        read_only: false
    environment:
      TZ: Etc/UTC
      MYSQL_ROOT_PASSWORD: '{{ webserver_mysql_root_password }}'
      MYSQL_DATABASE: '{{ webserver_mysql_database }}'
      MYSQL_USER: '{{ webserver_mysql_user }}'
      MYSQL_PASSWORD: '{{ webserver_mysql_password }}'
      MARIADB_AUTO_UPGRADE: 'True'
      MARIADB_DISABLE_UPGRADE_BACKUP: 'True'
    healthcheck:
      test: "mariadb-admin status -h localhost -p$$MYSQL_ROOT_PASSWORD"
      timeout: 10s
      retries: 5
    networks:
      - code-network

{% endif %}
{% if webserver_sftp_enable %}
  sftp:
    image: atmoz/sftp
    restart: always
    volumes:
      - type: bind
        source: './code'
        target: /home/uploader/code
        read_only: false
      - type: bind
        source: './sftp/authorized_keys'
        target: /home/uploader/.ssh/keys/authorized_keys.pub
        read_only: true
      - type: bind
        source: './sftp/ssh_host_rsa_key'
        target: /etc/ssh/ssh_host_rsa_key
        read_only: true
      - type: bind
        source: './sftp/ssh_host_ed25519_key'
        target: /etc/ssh/ssh_host_ed25519_key
        read_only: true
    command: uploader::33
    ports:
      - '{{ webserver_sftp_port }}:22'
    healthcheck:
      test: ["CMD-SHELL", "ssh-keyscan -T1 127.0.0.1 || exit 1"]
      timeout: 10s
      retries: 5
{% endif %}


{% if webserver_myadmin_enable %}
  myadmin:
    image: {{ webserver_myadmin_image }}
    restart: always
    environment:
      TZ: Etc/UTC
      PMA_HOST: db
      PMA_USER: '{{ webserver_mysql_user }}'
      PMA_PASSWORD: '{{ webserver_mysql_password }}'
      HIDE_PHP_VERSION: 'yes'
      UPLOAD_LIMIT:  '{{ webserver_myadmin_max_upload_size }}'
      PMA_ABSOLUTE_URI: '{{ webserver_myadmin_absolute_uri }}'
    networks:
      - code-network
    depends_on:
      - db
    healthcheck:
      test: ["CMD-SHELL", "curl --head --fail 127.0.0.1:80/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
{% endif %}

networks:
  code-network:
    driver: bridge
  webproxy:
    external: true
    name: webproxy
