---
# defaults file for promtail deployment
promtail_local_cache_dir: '{{ local_cache_dir | default("/tmp") }}'
promtail_path: '/container/promtail'

promtail_docker_pull: '{{ global_docker_pull | default(False) }}'
promtail_loki_server: 'loki.{{ ansible_domain }}'
promtail_loki_url: https://{{ promtail_loki_server }}/loki/api/v1/push
promtail_loki_username: testuser
promtail_loki_password: password

promtail_scrape_configs_default:
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          category: 'serverlogs'
          job: varlogs
          __path__: /var/log/*log

  - job_name: apt
    static_configs:
      - targets:
          - localhost
        labels:
          category: 'serverlogs'
          job: varlogs
          __path__: /var/log/apt/*log
    pipeline_stages: []

  - job_name: journal
    journal:
      path: /var/log/journal/
      labels:
        category: 'serverlogs'
        job: journallogs
    relabel_configs:
      - source_labels: ['__journal__systemd_unit']
        # remove .service
        # regex: '(.+)\.service'
        # replacement: '$1'
        target_label: 'systemd_unit'

# additional scrape_configs
promtail_scrape_configs: [{}]

# Example
# promtail_scrape_configs:
#   - job_name: gitlab
#     static_configs:
#       - targets:
#           - localhost
#         labels:
#           category: 'serverlogs'
#           job: varlogs
#           __path__: /var/log/gitlab/*/*.log


# scrape logs from docker containers
promtail_scrape_docker_enabled: False
promtail_scrape_config_docker:
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        # filters:
        #   - name: name
        #     values: [test-container]
    relabel_configs:
      - source_labels: ['__meta_docker_container_label_com_docker_compose_container_number']
        target_label: 'compose_container_number'
        action: 'replace'
        replacement: '${1}'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_project']
        target_label: 'compose_project'
        action: 'replace'
        replacement: '${1}'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_project_working_dir']
        target_label: 'compose_project_working_dir'
        action: 'replace'
        replacement: '${1}'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_oneoff']
        target_label: 'compose_oneoff'
        action: 'replace'
        replacement: '${1}'
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'compose_service'
        action: 'replace'
        replacement: '${1}'
      - source_labels: ['__meta_docker_container_id']
        target_label: 'container_id'
        action: 'replace'
      - source_labels: ['__meta_docker_container_name']
        target_label: 'container_name'
        regex: '/(.*)'
        action: 'replace'

      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'stream'
        action: 'replace'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'source'
        action: 'replace'
      - source_labels: ['__meta_docker_container_log_stream']
        target_label: 'source_type'
        action: 'replace'

      - target_label: 'category'
        replacement: 'dockerlogs'
      - target_label: 'job'
        replacement: 'docker'
      ## Map all labels
      # - action: labelmap
      #   regex: '__meta_docker_container_label_(.+)'
      #   replacement: 'container_labels_${1}'
    pipeline_stages:
      - multiline:
          firstline: '^\x{200B}'
          max_wait_time: 1s
      - drop:
          older_than: 48h
          drop_counter_reason: "line_too_old"


# deploy mode (binary/docker)
# docker: use docker compose in /container/promtail
# binary: download binary, install systemd service
promtail_deploy_mode: binary

promtail_config_dir: "{{ '/container/promtail' if promtail_deploy_mode == 'docker' else '/etc/promtail' }}"
promtail_positions_path: "{{ '/data/promtail' if promtail_deploy_mode == 'docker' else '/var/log/promtail' }}"

promtail_version: 3.0.0 # also update checkum
# checksum of promtail-linux-amd64.zip from https://github.com/grafana/loki/releases
# wget -q -O - https://github.com/grafana/loki/releases/download/v3.0.0/SHA256SUMS | grep promtail-linux-amd64.zip
promtail_checksum: 3a5120422a2a8aa26659a188d63f1425707ed42a1af274acc0a7797d851acf48

promtail_server_disable: True
promtail_server_http_listen_address: 0.0.0.0

# additional groups for user promtail to read files
promtail_additional_groups:
  - adm
  - systemd-journal

# run promtail with user. Allows overriding to root (for debugging)
promtail_user: promtail
