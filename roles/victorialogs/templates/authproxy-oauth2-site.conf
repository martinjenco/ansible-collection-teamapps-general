set_real_ip_from  172.28.0.0/16;
real_ip_header    X-Forwarded-For;
real_ip_recursive on;

client_max_body_size 10G;
chunked_transfer_encoding on;

# disable output of nginx version etc.
server_tokens off;
# Fix 400 (Bad Request) Error
large_client_header_buffers 8 16k;

# If we receive X-Forwarded-Proto, pass it through; otherwise, pass along the
# scheme used to connect to this server
map $http_x_forwarded_proto $proxy_x_forwarded_proto {
  default $http_x_forwarded_proto;
  ''      $scheme;
}

# If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
# Connection header that may have been passed to this server
map $http_upgrade $proxy_connection {
  default upgrade;
  '' close;
}

# Set appropriate X-Forwarded-Ssl header
map $http_x_forwarded_ssl $proxy_x_forwarded_ssl {
  default $http_x_forwarded_ssl;
  '' $https;
}

# HTTP 1.1 support
proxy_http_version 1.1;
proxy_buffering off;
proxy_set_header Host $http_host;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection $proxy_connection;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
proxy_set_header X-Forwarded-Ssl $proxy_x_forwarded_ssl;

# Mitigate httpoxy attack (see README for details)
proxy_set_header Proxy "";

# log format with application performance metrics in logfmt style
log_format apm 't="$time_iso8601" h=$host u=$remote_user client=$remote_addr '
  'status=$status '
  'request="$request" '
  'req_time=$request_time '
  'ua="$http_user_agent" '
  'method=$request_method '
  'req_length=$request_length '
  'bytes_sent=$bytes_sent '
  'body_bytes_sent=$body_bytes_sent '
  'referer="$http_referer" '
  'us_addr=$upstream_addr '
  'us_status=$upstream_status '
  'us_connect_time=$upstream_connect_time '
  'us_header_time=$upstream_header_time '
  'us_response_time=$upstream_response_time ';

# caching configuration for auth_request responses
proxy_cache_path /tmp/validatecache levels=1:2 keys_zone=oauth2_cache:10m max_size=128m inactive=30m use_temp_path=off;

server {
    listen 80;
    server_name localhost;
    access_log /var/log/nginx/access.log apm;

    client_max_body_size 64M;
    proxy_request_buffering off;

    root   /usr/share/nginx/html;
    index  index.html index.htm;

    # workaround with variable for dynamic resolve, not just at startup
    resolver 127.0.0.11 valid=10s; # 127.0.0.11 comes from /etc/resolv.conf on the nginx container
    set $victorialogs victorialogs;
    set $vmalert vmalert;
    set $vmagent vmagent;

    # Restrict by default (read/write)
    auth_basic           "Restricted";
    auth_basic_user_file /etc/nginx/conf.d/htaccess/htpasswd_read ;

    # include auth_request to oauth2_proxy
    include /etc/nginx/vhost.d/oauth2_vhost.conf;

    location / {
        return 501 "not configured on authproxy\n";
    }

    # nginx authproxy status
    location = /proxystatus {
        auth_basic off;
        auth_request off;
        add_header Content-Type text/plain;
        return 200 "NGINX Status OK\n";
    }
    location = /TEST-ALERT {
        auth_basic off;
        auth_request off;
        add_header Content-Type text/plain;
        return 200 "TEST-ALERT Request received. OK\n";
    }

    # Allow readiness endpoint
    location /ready {
        auth_basic off;
        auth_request off;
        proxy_pass http://$victorialogs:9428;
    }
    location /health {
        auth_basic off;
        auth_request off;
        proxy_pass http://$victorialogs:9428;
    }

    # restricted read
    location /select {
        include /etc/nginx/vhost.d/oauth2_vhost_location.conf;
        proxy_pass http://$victorialogs:9428;
    }
    location /api/v1/status {
        include /etc/nginx/vhost.d/oauth2_vhost_location.conf;
        proxy_pass http://$victorialogs:9428;
    }

    # VM UI
    location /select/vmui {
        include /etc/nginx/vhost.d/oauth2_vhost_location.conf;
        proxy_pass http://$victorialogs:9428;
    }

    # Allow write only by separate htpasswd file
    ############################################

    # insert
    location /insert {
        auth_basic           "Restricted Write API";
        auth_basic_user_file /etc/nginx/conf.d/htaccess/htpasswd_write ;

{% if not victorialogs_write_access_log | default(False) %}
        access_log off;
{% endif %}

        proxy_pass http://$victorialogs:9428;
    }

    ## Admin Restricted
    ###################

    location = / {
        auth_basic           "Restricted Admin API";
        auth_basic_user_file /etc/nginx/conf.d/htaccess/htpasswd_admin ;
        include /etc/nginx/vhost.d/oauth2_vhost_location.conf;
        proxy_pass http://$victorialogs:9428;
    }

    # # snapshot
    # location /snapshot {
    #     auth_basic           "Restricted Admin API";
    #     auth_basic_user_file /etc/nginx/conf.d/htaccess/htpasswd_admin ;
    #     proxy_pass http://$victorialogs:9428;
    # }
    # location /api/v1/admin {
    #     auth_basic           "Restricted Admin API";
    #     auth_basic_user_file /etc/nginx/conf.d/htaccess/htpasswd_admin ;
    #     proxy_pass http://$victorialogs:9428;
    # }
    # location /internal {
    #     auth_basic           "Restricted Admin API";
    #     auth_basic_user_file /etc/nginx/conf.d/htaccess/htpasswd_admin ;
    #     proxy_pass http://$victorialogs:9428;
    # }
    # location /api/v1/import {
    #     auth_basic           "Restricted Admin API";
    #     auth_basic_user_file /etc/nginx/conf.d/htaccess/htpasswd_admin ;
    #     proxy_pass http://$victorialogs:9428;
    # }
    # # influx and other exports
    # location /api/v1/export {
    #     auth_basic           "Restricted Admin API";
    #     auth_basic_user_file /etc/nginx/conf.d/htaccess/htpasswd_admin ;
    #     proxy_pass http://$victorialogs:9428;
    # }
    # debug
    location /debug {
        auth_basic           "Restricted Admin API";
        auth_basic_user_file /etc/nginx/conf.d/htaccess/htpasswd_admin ;
        include /etc/nginx/vhost.d/oauth2_vhost_location.conf;
        proxy_pass http://$victorialogs:9428;
    }

    # flags
    location /flags {
        auth_basic           "Restricted Admin API";
        include /etc/nginx/vhost.d/oauth2_vhost_location.conf;
        auth_basic_user_file /etc/nginx/conf.d/htaccess/htpasswd_admin ;
        proxy_pass http://$victorialogs:9428;
    }

    # ## access vmalert through /vmalert/ prefix with admin credentials
    location /vmalert/ {
        auth_basic           "Restricted Admin API";
        auth_basic_user_file /etc/nginx/conf.d/htaccess/htpasswd_admin ;
        include /etc/nginx/vhost.d/oauth2_vhost_location.conf;
        proxy_pass http://$vmalert:8880;
    }

    # ## access vmagent with prefix
    location /vmagent/ {
        auth_basic           "Restricted Admin API";
        auth_basic_user_file /etc/nginx/conf.d/htaccess/htpasswd_admin ;
        proxy_pass http://$vmagent:8429;
    }

    ## forward rules api to vmalert with read credentials for Grafana Integration
    location /api/v1/rules {
        proxy_pass http://$vmalert:8880/vmalert/api/v1/rules;
    }
    location /api/v1/alerts {
        proxy_pass http://$vmalert:8880/vmalert/api/v1/alerts;
    }

}
