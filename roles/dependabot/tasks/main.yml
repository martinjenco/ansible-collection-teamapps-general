# dependabot tasks

- name: create project directory
  file:
    path: "{{ dependabot_path }}"
    state: directory
    owner: root
    group: root
    mode: '0770'

- name: create mongodb and redis data directory
  file:
    path: "{{ item }}"
    state: directory
    owner: '1001'
    group: root
    mode: '0770'
  with_items:
    - "{{ dependabot_path }}/mongodb-data"
    - "{{ dependabot_path }}/redis-data"

- name: create tmp directory
  file:
    path: "{{ dependabot_path }}/tmp"
    state: directory
    owner: '1000'
    group: '1000'
    mode: '0770'

- name: create htpasswd file
  copy:
    content: '{{ dependabot_htpasswd }}'
    dest: '{{ dependabot_webproxy_path }}/data/htpasswd/{{ dependabot_domain }}'
    owner: root
    group: root
    mode: '0644'

- name: allow whitelisted hosts
  template:
    src: 'dependabot_location.conf.j2'
    dest: '{{ dependabot_webproxy_path }}/data/vhost.d/{{ dependabot_domain }}_location'
    owner: root
    group: root
    mode: '0644'
  notify: dependabot_regenerate_webproxy_config

- name: dependabot rake command wrapper
  copy:
    content: |
      #!/bin/bash
      set -eu
      dir="$(dirname $(readlink -f $0))"
      cd $dir
      if [ -t 0 ] ; then
        tty=""
      else
        tty="-T"
      fi
      docker compose exec ${tty} worker bundle exec rake "$@"
    dest: '{{ dependabot_path }}/rake'
    owner: root
    group: root
    mode: '0750'

- name: deploy .env
  template:
    src: 'env.j2'
    dest: '{{ dependabot_path }}/.env'
    owner: root
    group: root
    mode: '0644'
  no_log: true

- name: deploy compose
  template:
    src: 'docker-compose.yml.j2'
    dest: '{{ dependabot_path }}/docker-compose.yml'
    owner: root
    group: root
    mode: '0644'

- name: dependabot_docker-compose-up
  community.docker.docker_compose_v2:
    project_src: '{{ dependabot_path }}'
    state: present
    pull: "{{ dependabot_docker_pull | ternary('always', 'policy') }}"
    remove_orphans: true
  register: dependabot_compose_return
  changed_when: dependabot_compose_return.actions | count > 2 # workaround. the services migration and background-tasks are always started and stops after init

- name: print compose actions
  vars:
    actions: "{{ dependabot_compose_return.actions }}"
  debug:
    var: actions
  changed_when: true
  when: dependabot_compose_return.actions | count > 2 # workaround. the services migration and background-tasks are always started and stops after init
