- name: create oauth2-proxy instance directory - {{ oauth2_proxy_instance_domain }}
  file:
    path: '{{ oauth2_proxy_instance_directory }}'
    state: directory
    owner: root
    group: root
    mode: '0750'

- name: deploy docker-compose.yml - {{ oauth2_proxy_instance_domain }}
  template:
    src: docker-compose.yml.j2
    dest: '{{ oauth2_proxy_instance_directory }}/docker-compose.yml'
    owner: root
    group: root
    mode: 0644

- name: deploy oauth2-proxy.cfg - {{ oauth2_proxy_instance_domain }}
  template:
    src: oauth2-proxy.cfg.j2
    dest: '{{ oauth2_proxy_instance_directory }}/oauth2-proxy.cfg'
    owner: 65532 # UID/GID 65532 is also known as nonroot user in distroless image
    group: root
    mode: 0640
  register: oauth2_proxy_instance_reg_config

- name: deploy htpasswd file - {{ oauth2_proxy_instance_domain }}
  template:
    src: htpasswd.j2
    dest: '{{ oauth2_proxy_instance_directory }}/htpasswd'
    owner: 65532 # UID/GID 65532 is also known as nonroot user in distroless image
    group: root
    mode: 0640

- name: deploy authenticated_emails_file - {{ oauth2_proxy_instance_domain }}
  template:
    src: authenticated_emails_file.j2
    dest: '{{ oauth2_proxy_instance_directory }}/authenticated_emails_file'
    owner: 65532 # UID/GID 65532 is also known as nonroot user in distroless image
    group: root
    mode: 0640
    register: oauth2_proxy_instance_authenticated_emails_file

- name: docker-compose-up - {{ oauth2_proxy_instance_domain }}
  community.docker.docker_compose_v2:
    project_src: '{{ oauth2_proxy_instance_directory }}'
    state: present
    pull: "{{ oauth2_proxy_docker_pull | ternary('always', 'policy') }}"
    remove_orphans: True
  register: oauth2_proxy_compose_return

- name: print actions by compose - {{ oauth2_proxy_instance_domain }} # noqa no-handler
  vars:
    actions: "{{ oauth2_proxy_compose_return.actions }}"
  debug:
    var: actions
  changed_when: True
  when: oauth2_proxy_compose_return.changed

# cannot be defined as handler, because it is used multiple times with different values
- name: restart oauth2_proxy instance '{{ oauth2_proxy_instance_directory }}' # noqa no-handler
  community.docker.docker_compose_v2:
    project_src: '{{ oauth2_proxy_instance_directory }}'
    services:
      - 'oauth2-proxy'
    state: restarted
  when:
    - oauth2_proxy_instance_reg_config.changed
    - oauth2_proxy_instance_authenticated_emails_file.changed
  register: oauth2_proxy__register_compose

- name: print actions by compose # noqa no-handler
  vars:
    actions: "{{ oauth2_proxy__register_compose.actions }}"
  debug:
    var: actions
  changed_when: True
  when: oauth2_proxy__register_compose.changed


## webproxy configuration
- name: include webproxy config - {{ oauth2_proxy_instance_domain }}
  include_tasks: webproxy_config.yml
  when: oauth2_proxy_instance_webproxy_integration

- name: Flush handlers after each instance - {{ oauth2_proxy_instance_domain }}
  meta: flush_handlers
